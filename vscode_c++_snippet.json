{
    "cpp snippets":
    {
        "prefix" : "cppstart",
                   "body" : [
                       "#include<bits/stdc++.h>",
                       "using namespace std;",
					   "",
                       "int main()",
                       "{",
					   "    $0",
                       "    return 0;",
                       "}"
  
                   ],
                    "description" : "Boilerplate code for C++ Competitive Programming"
    },
	"cp c++ start":{
		"prefix": "cpstart",
		"body": [
			"#include <bits/stdc++.h>",
			"",
			"// Aarif Khan",
			"// Codechef: https://www.codechef.com/users/aarifkhan_7",
			"// Github: https://github.com/aarifkhan7",
			"",
			"#define pi (3.141592653589)",
			"#define MOD 1e9+7",
			"#define ll long long int",
			"#define all(x) x.begin(), x.end()",
			"#define loop(a, b) for(int i = a; i < b; i++)",
			"#define loop1(a, b) for(int j = a; j < b; j++)",
            		"#define fast ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);",
			"#define pii pair<int,int>",
			"#define ff first",
			"#define ss second",
			"#define vi vector<int>",
			"#define pb push_back",
			"#define mp make_pair",
			"template<typename T> std::istream& operator >>(std::istream& input, std::vector<T>& data) { for (auto& item : data) { input >> item; } return input; }",			
			"template<typename T> std::ostream& operator <<(std::ostream& output, const std::vector<T>& data) { for (const T& x : data) output << x << \" \"; output << '\\n'; return output; }",
			"template<typename T, typename S> std::ostream& operator <<(std::ostream& os, const std::pair<T, S>& v) { os << \"(\"; os << v.first << \", \" << v.second << \")\"; return os; }",
			"template<typename T, typename S> std::ostream& operator <<(std::ostream& os, const std::map<T, S>& v) { for (auto it : v) os << it.first << \" : \" << it.second << \"\\n\"; return os; }",
			"template<typename T> std::ostream& operator <<(std::ostream& os, const std::set<T>& v) { os << \"[\"; for (auto it : v) { os << it; if (it != *v.rbegin()) os << \", \"; } os << \"]\\n\"; return os; }",
			"",
			"using namespace std;",
			"",
			"void solve(){",
			"	$0",
			"}",
			"",
            "int main()",
            "{",
			"	fast;",
			"    int t; cin >> t;",
			"	while(t--){",
			"		solve();",
			"	}",
            "    return 0;",
            "}"
		],
		"description": "CP C++ Boilerplate"
	}
}
